// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  relationMode = "prisma"
}

model InterviewExp {
  id  String  @id @default(uuid())  
  name  String
  rollno  String
  email String  
  phone String
  company String
  package String
  desc  String
  link InterviewExpLink[] @relation("InterviewExpToLink")
  rating  Int
}

model InterviewExpLink{
  id  String  @id @default(uuid())
  name  String
  link  String
  interviewExpId String
  interviewExp InterviewExp @relation("InterviewExpToLink", fields: [interviewExpId], references: [id], onDelete: Cascade)

  @@index([interviewExpId])
}

model ClassNotes{
  id String @id @default(uuid())
  subject String
  link  ClassNotesLink[]  @relation("ClassNotesToLink")
}

model ClassNotesLink{
  id  String  @id @default(uuid())
  name  String
  link  String
  classNotesId String
  classNotes ClassNotes @relation("ClassNotesToLink", fields: [classNotesId], references: [id], onDelete: Cascade)

  @@index([classNotesId])
}

model Coding{
  id String @id @default(uuid())
  topic String
  desc  String
  link  CodingLink[]  @relation("CodingToLink")  
}

model CodingLink{
  id  String  @id @default(uuid())
  name  String
  link  String
  codingId  String
  coding  Coding  @relation("CodingToLink", fields: [codingId], references: [id], onDelete: Cascade)

  @@index([codingId])
}

model Resources{
  id  String  @id @default(uuid())
  topic String
  link  ResourceLink[]  @relation("ResourcesToLink")
}

model ResourceLink{
  id  String  @id @default(uuid())
  name  String
  link  String
  resourcesId String
  resources Resources @relation("ResourcesToLink", fields: [resourcesId], references: [id], onDelete: Cascade)

  @@index([resourcesId])
}

model Events{
  id  String @id  @default(uuid())
  regLink String
  link EventsLink[] @relation("EventsToLink")
  desc  String
}

model EventsLink{
  id  String  @id @default(uuid())
  name  String
  link  String
  eventId String
  events Events @relation("EventsToLink", fields: [eventId], references: [id], onDelete: Cascade)

  @@index([eventId])
}

model CompetitiveExam{
  id  String  @id @default(uuid())
  name  String
  desc  String
  link  CompetitiveExamLink[]  @relation("CompetitiveExamToLink")
}

model CompetitiveExamLink{
  id  String  @id @default(uuid())
  name  String
  link  String
  competitiveExamId String
  competitiveExam CompetitiveExam @relation("CompetitiveExamToLink", fields: [competitiveExamId], references: [id], onDelete: Cascade)

  @@index([competitiveExamId])
}
